# JMH 1.14.1 (released 1392 days ago, please consider updating!)
# VM version: JDK 1.8.0_171, VM 25.171-b11
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49514:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: sample.StringBuilderBenchmark.testStringAdd

# Run progress: 0.00% complete, ETA 00:01:12
# Fork: 1 of 2
# Warmup Iteration   1: 0.003 ±(99.9%) 0.001 ms/op
# Warmup Iteration   2: 0.005 ±(99.9%) 0.001 ms/op
# Warmup Iteration   3: 0.002 ±(99.9%) 0.001 ms/op
Iteration   1: 0.002 ±(99.9%) 0.001 ms/op
                 testStringAdd·p0.00:   ≈ 10⁻⁶ ms/op
                 testStringAdd·p0.50:   ≈ 10⁻³ ms/op
                 testStringAdd·p0.90:   0.001 ms/op
                 testStringAdd·p0.95:   0.001 ms/op
                 testStringAdd·p0.99:   0.003 ms/op
                 testStringAdd·p0.999:  0.067 ms/op
                 testStringAdd·p0.9999: 3.920 ms/op
                 testStringAdd·p1.00:   75.104 ms/op

Iteration   2: 0.002 ±(99.9%) 0.001 ms/op
                 testStringAdd·p0.00:   ≈ 10⁻⁶ ms/op
                 testStringAdd·p0.50:   ≈ 10⁻³ ms/op
                 testStringAdd·p0.90:   0.001 ms/op
                 testStringAdd·p0.95:   0.002 ms/op
                 testStringAdd·p0.99:   0.003 ms/op
                 testStringAdd·p0.999:  0.062 ms/op
                 testStringAdd·p0.9999: 3.503 ms/op
                 testStringAdd·p1.00:   56.754 ms/op

Iteration   3: 0.001 ±(99.9%) 0.001 ms/op
                 testStringAdd·p0.00:   ≈ 10⁻⁶ ms/op
                 testStringAdd·p0.50:   ≈ 10⁻³ ms/op
                 testStringAdd·p0.90:   0.001 ms/op
                 testStringAdd·p0.95:   0.002 ms/op
                 testStringAdd·p0.99:   0.003 ms/op
                 testStringAdd·p0.999:  0.051 ms/op
                 testStringAdd·p0.9999: 1.521 ms/op
                 testStringAdd·p1.00:   27.754 ms/op


# Run progress: 25.00% complete, ETA 00:00:58
# Fork: 2 of 2
# Warmup Iteration   1: 0.003 ±(99.9%) 0.001 ms/op
# Warmup Iteration   2: 0.003 ±(99.9%) 0.001 ms/op
# Warmup Iteration   3: 0.001 ±(99.9%) 0.001 ms/op
Iteration   1: 0.001 ±(99.9%) 0.001 ms/op
                 testStringAdd·p0.00:   ≈ 10⁻⁶ ms/op
                 testStringAdd·p0.50:   ≈ 10⁻³ ms/op
                 testStringAdd·p0.90:   0.001 ms/op
                 testStringAdd·p0.95:   0.001 ms/op
                 testStringAdd·p0.99:   0.002 ms/op
                 testStringAdd·p0.999:  0.039 ms/op
                 testStringAdd·p0.9999: 1.930 ms/op
                 testStringAdd·p1.00:   21.332 ms/op

Iteration   2: 0.001 ±(99.9%) 0.001 ms/op
                 testStringAdd·p0.00:   ≈ 10⁻⁶ ms/op
                 testStringAdd·p0.50:   ≈ 10⁻³ ms/op
                 testStringAdd·p0.90:   0.001 ms/op
                 testStringAdd·p0.95:   0.001 ms/op
                 testStringAdd·p0.99:   0.003 ms/op
                 testStringAdd·p0.999:  0.033 ms/op
                 testStringAdd·p0.9999: 1.346 ms/op
                 testStringAdd·p1.00:   10.551 ms/op

Iteration   3: 0.002 ±(99.9%) 0.001 ms/op
                 testStringAdd·p0.00:   ≈ 10⁻⁶ ms/op
                 testStringAdd·p0.50:   ≈ 10⁻³ ms/op
                 testStringAdd·p0.90:   0.001 ms/op
                 testStringAdd·p0.95:   0.001 ms/op
                 testStringAdd·p0.99:   0.003 ms/op
                 testStringAdd·p0.999:  0.113 ms/op
                 testStringAdd·p0.9999: 3.886 ms/op
                 testStringAdd·p1.00:   32.735 ms/op



Result "testStringAdd":
  N = 7082378
  mean =      0.002 ±(99.9%) 0.001 ms/op

  Histogram, ms/op:
    [ 0.000,  5.000) = 7082025 
    [ 5.000, 10.000) = 233 
    [10.000, 15.000) = 66 
    [15.000, 20.000) = 27 
    [20.000, 25.000) = 11 
    [25.000, 30.000) = 8 
    [30.000, 35.000) = 2 
    [35.000, 40.000) = 1 
    [40.000, 45.000) = 0 
    [45.000, 50.000) = 1 
    [50.000, 55.000) = 1 
    [55.000, 60.000) = 2 
    [60.000, 65.000) = 0 
    [65.000, 70.000) = 0 
    [70.000, 75.000) = 0 

  Percentiles, ms/op:
      p(0.0000) =     ≈ 10⁻⁶ ms/op
     p(50.0000) =     ≈ 10⁻³ ms/op
     p(90.0000) =      0.001 ms/op
     p(95.0000) =      0.001 ms/op
     p(99.0000) =      0.003 ms/op
     p(99.9000) =      0.058 ms/op
     p(99.9900) =      2.462 ms/op
     p(99.9990) =     12.216 ms/op
     p(99.9999) =     32.795 ms/op
    p(100.0000) =     75.104 ms/op


# JMH 1.14.1 (released 1392 days ago, please consider updating!)
# VM version: JDK 1.8.0_171, VM 25.171-b11
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49514:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: sample.StringBuilderBenchmark.testStringBuilderAdd

# Run progress: 50.00% complete, ETA 00:00:38
# Fork: 1 of 2
# Warmup Iteration   1: 0.001 ±(99.9%) 0.001 ms/op
# Warmup Iteration   2: 0.001 ±(99.9%) 0.001 ms/op
# Warmup Iteration   3: 0.001 ±(99.9%) 0.001 ms/op
Iteration   1: 0.002 ±(99.9%) 0.001 ms/op
                 testStringBuilderAdd·p0.00:   ≈ 10⁻⁶ ms/op
                 testStringBuilderAdd·p0.50:   ≈ 10⁻⁴ ms/op
                 testStringBuilderAdd·p0.90:   ≈ 10⁻³ ms/op
                 testStringBuilderAdd·p0.95:   0.001 ms/op
                 testStringBuilderAdd·p0.99:   0.002 ms/op
                 testStringBuilderAdd·p0.999:  0.082 ms/op
                 testStringBuilderAdd·p0.9999: 4.229 ms/op
                 testStringBuilderAdd·p1.00:   27.754 ms/op

Iteration   2: 0.001 ±(99.9%) 0.001 ms/op
                 testStringBuilderAdd·p0.00:   ≈ 10⁻⁶ ms/op
                 testStringBuilderAdd·p0.50:   ≈ 10⁻⁴ ms/op
                 testStringBuilderAdd·p0.90:   ≈ 10⁻³ ms/op
                 testStringBuilderAdd·p0.95:   0.001 ms/op
                 testStringBuilderAdd·p0.99:   0.002 ms/op
                 testStringBuilderAdd·p0.999:  0.038 ms/op
                 testStringBuilderAdd·p0.9999: 1.516 ms/op
                 testStringBuilderAdd·p1.00:   38.928 ms/op

Iteration   3: 0.001 ±(99.9%) 0.001 ms/op
                 testStringBuilderAdd·p0.00:   ≈ 10⁻⁶ ms/op
                 testStringBuilderAdd·p0.50:   ≈ 10⁻³ ms/op
                 testStringBuilderAdd·p0.90:   0.001 ms/op
                 testStringBuilderAdd·p0.95:   0.001 ms/op
                 testStringBuilderAdd·p0.99:   0.002 ms/op
                 testStringBuilderAdd·p0.999:  0.036 ms/op
                 testStringBuilderAdd·p0.9999: 1.872 ms/op
                 testStringBuilderAdd·p1.00:   19.005 ms/op


# Run progress: 75.00% complete, ETA 00:00:19
# Fork: 2 of 2
# Warmup Iteration   1: 0.002 ±(99.9%) 0.001 ms/op
# Warmup Iteration   2: 0.002 ±(99.9%) 0.001 ms/op
# Warmup Iteration   3: 0.002 ±(99.9%) 0.001 ms/op
Iteration   1: 0.001 ±(99.9%) 0.001 ms/op
                 testStringBuilderAdd·p0.00:   ≈ 10⁻⁶ ms/op
                 testStringBuilderAdd·p0.50:   ≈ 10⁻⁴ ms/op
                 testStringBuilderAdd·p0.90:   ≈ 10⁻³ ms/op
                 testStringBuilderAdd·p0.95:   0.001 ms/op
                 testStringBuilderAdd·p0.99:   0.001 ms/op
                 testStringBuilderAdd·p0.999:  0.020 ms/op
                 testStringBuilderAdd·p0.9999: 1.398 ms/op
                 testStringBuilderAdd·p1.00:   11.534 ms/op

Iteration   2: 0.001 ±(99.9%) 0.001 ms/op
                 testStringBuilderAdd·p0.00:   ≈ 10⁻⁶ ms/op
                 testStringBuilderAdd·p0.50:   ≈ 10⁻⁴ ms/op
                 testStringBuilderAdd·p0.90:   ≈ 10⁻³ ms/op
                 testStringBuilderAdd·p0.95:   0.001 ms/op
                 testStringBuilderAdd·p0.99:   0.001 ms/op
                 testStringBuilderAdd·p0.999:  0.009 ms/op
                 testStringBuilderAdd·p0.9999: 0.382 ms/op
                 testStringBuilderAdd·p1.00:   11.715 ms/op

Iteration   3: 0.001 ±(99.9%) 0.001 ms/op
                 testStringBuilderAdd·p0.00:   ≈ 10⁻⁶ ms/op
                 testStringBuilderAdd·p0.50:   ≈ 10⁻⁴ ms/op
                 testStringBuilderAdd·p0.90:   ≈ 10⁻³ ms/op
                 testStringBuilderAdd·p0.95:   0.001 ms/op
                 testStringBuilderAdd·p0.99:   0.002 ms/op
                 testStringBuilderAdd·p0.999:  0.009 ms/op
                 testStringBuilderAdd·p0.9999: 0.437 ms/op
                 testStringBuilderAdd·p1.00:   18.711 ms/op



Result "testStringBuilderAdd":
  N = 6773519
  mean =      0.001 ±(99.9%) 0.001 ms/op

  Histogram, ms/op:
    [ 0.000,  2.500) = 6773115 
    [ 2.500,  5.000) = 232 
    [ 5.000,  7.500) = 82 
    [ 7.500, 10.000) = 36 
    [10.000, 12.500) = 20 
    [12.500, 15.000) = 10 
    [15.000, 17.500) = 10 
    [17.500, 20.000) = 7 
    [20.000, 22.500) = 4 
    [22.500, 25.000) = 1 
    [25.000, 27.500) = 0 
    [27.500, 30.000) = 1 
    [30.000, 32.500) = 0 
    [32.500, 35.000) = 0 
    [35.000, 37.500) = 0 

  Percentiles, ms/op:
      p(0.0000) =     ≈ 10⁻⁶ ms/op
     p(50.0000) =     ≈ 10⁻⁴ ms/op
     p(90.0000) =     ≈ 10⁻³ ms/op
     p(95.0000) =      0.001 ms/op
     p(99.0000) =      0.002 ms/op
     p(99.9000) =      0.024 ms/op
     p(99.9900) =      1.313 ms/op
     p(99.9990) =      8.877 ms/op
     p(99.9999) =     20.058 ms/op
    p(100.0000) =     38.928 ms/op


# Run complete. Total time: 00:01:17

Benchmark                                                                   Mode      Cnt   Score    Error  Units
StringBuilderBenchmark.testStringAdd                                      sample  7082378   0.002 ±  0.001  ms/op
StringBuilderBenchmark.testStringAdd:testStringAdd·p0.00                  sample           ≈ 10⁻⁶           ms/op
StringBuilderBenchmark.testStringAdd:testStringAdd·p0.50                  sample           ≈ 10⁻³           ms/op
StringBuilderBenchmark.testStringAdd:testStringAdd·p0.90                  sample            0.001           ms/op
StringBuilderBenchmark.testStringAdd:testStringAdd·p0.95                  sample            0.001           ms/op
StringBuilderBenchmark.testStringAdd:testStringAdd·p0.99                  sample            0.003           ms/op
StringBuilderBenchmark.testStringAdd:testStringAdd·p0.999                 sample            0.058           ms/op
StringBuilderBenchmark.testStringAdd:testStringAdd·p0.9999                sample            2.462           ms/op
StringBuilderBenchmark.testStringAdd:testStringAdd·p1.00                  sample           75.104           ms/op
StringBuilderBenchmark.testStringBuilderAdd                               sample  6773519   0.001 ±  0.001  ms/op
StringBuilderBenchmark.testStringBuilderAdd:testStringBuilderAdd·p0.00    sample           ≈ 10⁻⁶           ms/op
StringBuilderBenchmark.testStringBuilderAdd:testStringBuilderAdd·p0.50    sample           ≈ 10⁻⁴           ms/op
StringBuilderBenchmark.testStringBuilderAdd:testStringBuilderAdd·p0.90    sample           ≈ 10⁻³           ms/op
StringBuilderBenchmark.testStringBuilderAdd:testStringBuilderAdd·p0.95    sample            0.001           ms/op
StringBuilderBenchmark.testStringBuilderAdd:testStringBuilderAdd·p0.99    sample            0.002           ms/op
StringBuilderBenchmark.testStringBuilderAdd:testStringBuilderAdd·p0.999   sample            0.024           ms/op
StringBuilderBenchmark.testStringBuilderAdd:testStringBuilderAdd·p0.9999  sample            1.313           ms/op
StringBuilderBenchmark.testStringBuilderAdd:testStringBuilderAdd·p1.00    sample           38.928           ms/op
